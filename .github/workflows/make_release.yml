on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    paths:
      - .github/workflows/make_release.yml

name: Create Release

jobs:
  build:
    permissions:
      contents: write
      id-token: write
    name: Create Release
    runs-on: ubuntu-latest
    if: github.repository == 'napari/napari'
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Checkout docs
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: napari/docs
          path: docs

      - name: Install Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: 3.12
          cache-dependency-path: pyproject.toml
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[build]  # need full install so we can build type stubs
      - name: Build Distribution
        run: make dist
      - name: Find Release Notes
        id: release_notes
        run: |
          TAG="${GITHUB_REF/refs\/tags\/v/}"  # clean tag
          VER="${TAG/a*/}"  # remove alpha identifier
          VER="${VER/b*/}"  # remove beta identifier
          VER="${VER/rc*/}"  # remove rc identifier
          VER="${VER/post*/}"  # remove post identifier
          RELEASE_NOTES_PATH="docs/docs/release/release_${VER//./_}.md"

          echo "tag=${TAG}" >> "$GITHUB_ENV"
          echo "release_notes_path=${RELEASE_NOTES_PATH}" >> "$GITHUB_ENV"
          echo tag: "${TAG}"
          echo release_notes_path: "${RELEASE_NOTES_PATH}"
          ls docs/docs/release

      - name: Create Release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        with:
          tag_name: ${{ github.ref }}
          name: ${{ env.tag }}
          body: pre-release ${{ env.tag }}
          body_path: ${{ env.release_notes_path }}
          draft: false
          prerelease: ${{ contains(env.tag, 'rc') || contains(env.tag, 'a') || contains(env.tag, 'b') }}
          target_commitish: ${{ github.sha }}
          files: |
            dist/*
      - name: Publish PyPI Package
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
