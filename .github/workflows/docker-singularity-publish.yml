name: Docker and Singularity build

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_dispatch:

#  schedule:
#    - cron: '31 0 * * *'
  push:
    branches: [ main ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io

jobs:
  build1:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - recipe: Docker
            target: napari
            image-name: napari/napari
          - recipe: Docker
            target: napari-xpra
            image-name: napari/napari-xpra

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      # https://github.com/docker/build-push-action/blob/master/docs/advanced/tags-labels.md
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: ${{ env.REGISTRY }}/${{ matrix.image-name }}
          #          images: |
          #            name/app
          #            ghcr.io/username/app
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            latest
          # oras://ghcr.io is tagged latest too, and seems to override the docker://ghcr.io tag -> race condition?

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: "dockerfile"
          target: ${{ matrix.target }}

# ----

  build2:
    needs: build1
    runs-on: ubuntu-latest
    container:
      image: quay.io/singularity/docker2singularity:v3.10.0
      options: --privileged
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        recipe: ["Singularity"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Continue if Singularity Recipe Exists
        run: |
          if [[ -f "${{ matrix.recipe }}" ]]; then
            echo "keepgoing=true" >> $GITHUB_ENV
          fi

      - name: Build Container
        if: ${{ env.keepgoing == 'true' }}
        env:
          recipe: ${{ matrix.recipe }}
        run: |
          ls
          if [ -f "${{ matrix.recipe }}" ]; then
             singularity build container.sif ${{ matrix.recipe }}
             tag=latest
          fi
          # Build the container and name by tag
          echo "Tag is $tag."
          echo "tag=$tag" >> $GITHUB_ENV

      - name: Login and Deploy Container
        if: (github.event_name != 'pull_request')
        env:
          keepgoing: ${{ env.keepgoing }}
        run: |
          if [[ "${keepgoing}" == "true" ]]; then
              echo ${{ secrets.GITHUB_TOKEN }} | singularity remote login -u ${{ secrets.GHCR_USERNAME }} --password-stdin oras://ghcr.io
              singularity push container.sif oras://ghcr.io/${GITHUB_REPOSITORY}:${tag}
          fi
