name: Test installed from pip

on:
  workflow_call:

jobs:
  test_pip_install:
    name: ubuntu-latest 3.12 pip install
    runs-on: ubuntu-latest
    timeout-minutes: 35
    env:
      XDG_CACHE_HOME: ${{ github.workspace }}/.cache
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          path: napari-from-github
      - name: Cache pooch downloads
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: |
            ${{ github.workspace }}/.cache/scikit-image
            ${{ github.workspace }}/.cache/napari-*
            ${{ github.workspace }}/.cache/pooch
          key: pooch

      - name: Set up Python 3.12
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: 3.12
          cache: "pip"
          cache-dependency-path: napari-from-github/pyproject.toml

      - name: Setup headless display
        uses: pyvista/setup-headless-display-action@7d84ae825e6d9297a8e99bdbbae20d1b919a0b19 # v4.2
        with:
          qt: true
          wm: herbstluftwm

      - name: Build wheel
        run: |
          pip install --upgrade pip build
          python -m build "./napari-from-github"
          # there is a bug in build/setuptools that build only wheel will ignore manifest content.
          # so we need to build sdist first and then build wheel

      - name: get wheel path
        run: |
          WHEEL_PATH=$(ls napari-from-github/dist/*.whl)
          echo "WHEEL_PATH=$WHEEL_PATH" >> "$GITHUB_ENV"

      - name: Install napari from wheel
        run: |
          pip install "${{ env.WHEEL_PATH }}[pyqt,testing]"
        shell:
            bash
        env:
          PIP_CONSTRAINT: napari-from-github/resources/constraints/constraints_py3.12.txt

      - name: uninstall numba
        run: |
          pip uninstall -y numba

      - name: Test
        run: |
          python -m pytest --pyargs napari --color=yes --basetemp=.pytest_tmp --config-file=napari-from-github/pyproject.toml
          python -m pytest --pyargs napari_builtins --color=yes --basetemp=.pytest_tmp --config-file=napari-from-github/pyproject.toml

      - name: Upload test artifacts
        if: failure()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: test artifacts pip install
          path: .pytest_tmp
          include-hidden-files: true
