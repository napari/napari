# We need a dual workflow to make sure the token has the needed permissions to post comments
# See https://stackoverflow.com/a/71683208 for more details

name: "Benchmarks - Report"

on:
  workflow_run:
    workflows: [Benchmarks]
    types:
      - completed

jobs:
  download:
    runs-on: ubuntu-latest
    steps:
      - name: "Download artifact"
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let artifactName = `asv-benchmark-results-${github.event.workflow_run.id}-${github.event.workflow_run.run_number}-${github.event.workflow_run.run_attempt}`
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == artifactName
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/asv_results.zip`, Buffer.from(download.data));

      - name: Unzip and prepare data
        run: |
          unzip asv_results.zip
          sed -i 's@||BENCHMARK_CI_LOGS_URL||@${{ github.event.workflow_run.html_url }}@g' .asv/results/message.txt
          if [[ -f .asv/results/pr_number ]]; then
            echo "PR_NUMBER=$(cat .asv/results/pr_number)" >> $GITHUB_ENV
          fi

      - name: "Comment on PR"
        if: env.PR_NUMBER != ''
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let fs = require('fs');
            let issue_number = Number(process.env.PR_NUMBER);
            let body = fs.readFileSync('.asv/results/message.txt');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: 'Thank you for the PR!'
            });
