on:
  push:
    branches:
      - master
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'  # accept all tags of the format vX.X.X

name: Publish Docs

jobs:
  copy:
    name: Copy Doc Sources
    runs-on: ubuntu-latest
    if: github.repository == 'napari/napari'
    steps:
      - name: Clone main repo
        uses: actions/checkout@master
        with:
          path: main      # place in a named directory
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install pyyaml
      - name: Clone napari.github.io repository
        uses: actions/checkout@master
        with:
          repository: 'napari/napari.github.io'
          ref: master
          path: 'napari.github.io'
          token: ${{ secrets.DOCS_GITHUB_TOKEN }}
      - name: copy doc sources
        run: python -m copy-docs
        working-directory: main/docs
      - name: update repo
        uses: EndBug/add-and-commit@v4
        with:
          message: |
            update doc sources
            autogenerated from ${{ github.repository }}@${{ github.sha }}
          ref: master
          add: .
          cwd: ./napari.github.io
        env:
          GITHUB_TOKEN: ${{ secrets.DOCS_GITHUB_TOKEN }}

  build:
    name: Build & Publish Docs
    runs-on: ubuntu-latest
    if: github.repository == 'napari/napari'
    steps:
      - name: Clone main repo
        uses: actions/checkout@master
        with:
          fetch-depth: 0  # keep all commit history
          path: main      # place in a named directory
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Libraries
        run: |
          sudo apt-get install -y libdbus-1-3 libxkbcommon-x11-0 libxcb-icccm4 \
            libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 \
            libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0 xvfb
          /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid \
            --make-pidfile --background --exec /usr/bin/Xvfb -- :99 \
            -screen 0 1920x1200x24 -ac +extension GLX
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e ".[all]"
          python -m pip install -r docs/requirements.txt
        working-directory: main
      - name: Build Docs
        run: jupyter-book build docs
        working-directory: main
        env:
          DISPLAY: ":99.0"

      - name: Clone docs repo
        uses: actions/checkout@master
        with:
          repository: 'napari/docs'
          ref: master
          path: docs
          token: ${{ secrets.DOCS_GITHUB_TOKEN }}
      - name: Get tag if is a release
        uses: olegtarasov/get-tag@v2.1
        with:
          tagRegex: "v(.*)"  # remove the leading v
        continue-on-error: true  # sets $GIT_TAG_NAME when successful
      - name: Copy docs to docs repo
        id: cp
        run: |
          VER=${GIT_TAG_NAME:-dev}
          DIR=./docs/$VER
          rm -rf $DIR
          cp -r ./main/docs/_build/html $DIR
          echo "::set-output name=directory::$VER"
      - name: Add & commit changes
        uses: EndBug/add-and-commit@v4
        with:
          message: |
            update ${{ steps.cp.outputs.directory }} docs
            autogenerated from ${{ github.repository }}@${{ github.sha }}
          ref: master
          add: ${{ steps.cp.outputs.directory }}
          cwd: ./docs
        env:
          GITHUB_TOKEN: ${{ secrets.DOCS_GITHUB_TOKEN }}
