[build-system]
requires = [
  "setuptools >= 56",
  "wheel",
  "setuptools_scm[toml]>=3.4"
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "napari/_version.py"

[tool.black]
target-version = ['py38', 'py39', 'py310']
skip-string-normalization = true
line-length = 79
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | examples
    | vendored
    | _vendor
  )/
  | napari/resources/qt.py
  | tools/minreq.py
)
'''

[tool.check-manifest]
ignore = [
  ".cirrus.yml",
  ".pre-commit-config.yaml",
  "asv.conf.json",
  "codecov.yml",
  "Makefile",
  "napari/_version.py",  # added during build by setuptools_scm
  "tools/minreq.py",
  "tox.ini",
  "napari/_qt/qt_resources/_qt_resources_*.py",
  "*.pyi",  # added by make typestubs
  "binder/*",
  ".env_sample",
  ".devcontainer/*",
  "napari/resources/icons/_themes/*/*.svg"
]

[tool.ruff]
line-length = 79

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".mypy_cache",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*vendored*",
    "*_vendor*",
]

target-version = "py38"
fix = true

[tool.ruff.lint]
select = [
    "E", "F", "W", #flake8
    "UP", # pyupgrade
    "I", # isort
    "YTT", #flake8-2020
    "TCH", # flake8-type-checing
    "BLE", # flake8-blind-exception
    "B", # flake8-bugbear
    "A", # flake8-builtins
    "C4", # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "G", # flake8-logging-format
    "PIE", # flake8-pie
    "COM", # flake8-commas
    "SIM", # flake8-simplify
    "INP", # flake8-no-pep420
    "PYI", # flake8-pyi
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "RET", # flake8-return
    "TID",  # flake8-tidy-imports # replace absolutify import
    "TRY", # tryceratops
    "ICN", # flake8-import-conventions
    "RUF", # ruff specyfic rules
]
ignore = [
    "E501", "UP006", "UP007", "TCH001", "TCH002", "TCH003",
    "A003", # flake8-builtins - we have class attributes violating these rule
    "COM812", # flake8-commas - we don't like adding comma on single line of arguments
    "SIM117", # flake8-simplify - we some of merged with statements are not looking great with black, reanble after drop python 3.9
    "Q000",
    "RET504", # not fixed yet https://github.com/charliermarsh/ruff/issues/2950
    "TRY003", # require implement multiple exception class
    "RUF005", # problem with numpy compatybility, see https://github.com/charliermarsh/ruff/issues/2142#issuecomment-1451038741
    "B028", # need to be fixed
    "PYI015", # it produces bad looking files (@jni opinion)
]


[tool.ruff.lint.per-file-ignores]
"napari/_vispy/__init__.py" = ["E402"]
"**/_tests/*.py" = ["B011", "INP001", "TRY301", "B018", "RUF012"]
"napari/utils/_testsupport.py" = ["B011"]
"tools/validate_strings.py" = ["F401"]
"tools/**" = ["INP001", "T20"]
"examples/**" = ["ICN001", "INP001", "T20"]
"**/vendored/**" = ["TID"]
"napari/benchmarks/**" = ["RUF012", "TID252"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"

[tool.ruff.lint.isort]
known-first-party=['napari']
combine-as-imports = true

[tool.ruff.lint.flake8-import-conventions]
[tool.ruff.lint.flake8-import-conventions.extend-aliases]
# Declare a custom alias for the `matplotlib` module.
"dask.array" = "da"
xarray = "xr"

[tool.pytest.ini_options]
# These follow standard library warnings filters syntax.  See more here:
# https://docs.python.org/3/library/warnings.html#describing-warning-filters
addopts = "--maxfail=5 --durations=10 -rXxs"
console_output_style = "count"
pystack_threshold=60
pystack_args="--native-all"


# NOTE: only put things that will never change in here.
# napari deprecation and future warnings should NOT go in here.
# instead... assert the warning with `pytest.warns()` in the relevant test,
# That way we can clean them up when no longer necessary
filterwarnings = [
  "error:::napari", # turn warnings from napari into errors
  "error:::test_.*", # turn warnings in our own tests into errors
  "default:::napari.+vendored.+",  # just print warnings inside vendored modules
  "ignore::DeprecationWarning:shibokensupport",
  "ignore::DeprecationWarning:ipykernel",
  "ignore::DeprecationWarning:tensorstore",
  "ignore:Accessing zmq Socket:DeprecationWarning:jupyter_client",
  "ignore:pythonw executable not found:UserWarning:",
  "ignore:data shape .* exceeds GL_MAX_TEXTURE_SIZE:UserWarning",
  "ignore:For best performance with Dask arrays in napari:UserWarning:",
  "ignore:numpy.ufunc size changed:RuntimeWarning",
  "ignore:Multiscale rendering is only supported in 2D. In 3D, only the lowest resolution scale is displayed",
  "ignore:Alternative shading modes are only available in 3D, defaulting to none",
  "ignore:distutils Version classes are deprecated::",
  "ignore:There is no current event loop:DeprecationWarning:",
  "ignore:(?s).*Pyarrow will become a required dependency of pandas:DeprecationWarning",  # pandas pyarrow (pandas<3.0),
]
markers = [
    "examples: Test of examples",
    "disable_qthread_start: Disable thread start in this Test",
    "disable_qthread_pool_start: Disable strarting QRunnable using QThreadPool start in this Test",
    "disable_qtimer_start: Disable timer start in this Test",
    "disable_qanimation_start: Disable animation start in this Test",
    "enable_console: Don't mock the IPython console (in QtConsole) in this Test",
]

[tool.mypy]
files = "napari"
# This file triggers an internal mypy error, so exclude collection
# TODO: fix this
exclude = "napari/utils/events/_tests/test_evented_model\\.py"
plugins =  "numpy.typing.mypy_plugin, pydantic.mypy"
ignore_missing_imports = true
show_error_codes = true
warn_redundant_casts = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
warn_unused_ignores = true
check_untyped_defs = true
no_implicit_optional = true
disable_error_code = [
  # See discussion at https://github.com/python/mypy/issues/2427;
  # mypy cannot run type checking on method assignment, but we use
  # that in several places, so ignore the error
  'method-assign'
]
# see `$ qtpy mypy-args` and qtpy readme. This will be used by `tox -e mypy`
# to properly infer with PyQt6 installed
always_false=['PYSIDE6', 'PYSIDE2', 'PYQT5']
always_true=['PYQT6']


# gloabl ignore error
[[tool.mypy.overrides]]
module = [
  '*._tests.*',
  '*.experimental.*',
  '*._vendor.*',
  '*.benchmarks.*',
  'napari_builtins.*'
]
ignore_errors = true




# individual ignore error
# we should strive to remove those
# See https://github.com/napari/napari/issues/2751
# you can regenerate this list with the following command \047 is single quote.
# mypy napari | cut -f1 -d: | sort | uniq  | tr '/' '.'  | sed 's/\.py//' | awk '{ print "    \047" $0 "\047," }'
[[tool.mypy.overrides]]
module = [
    'napari._qt.code_syntax_highlight',
    'napari._qt.containers._base_item_model',
    'napari._qt.containers._base_item_view',
    'napari._qt.containers._layer_delegate',
    'napari._qt.containers.qt_layer_model',
    'napari._qt.containers.qt_list_model',
    'napari._qt.containers.qt_list_view',
    'napari._qt.containers.qt_tree_model',
    'napari._qt.containers.qt_tree_view',
    'napari._qt.dialogs.confirm_close_dialog',
    'napari._qt.dialogs.preferences_dialog',
    'napari._qt.dialogs.qt_about',
    'napari._qt.dialogs.qt_activity_dialog',
    'napari._qt.dialogs.qt_modal',
    'napari._qt.dialogs.qt_notification',
    'napari._qt.dialogs.qt_package_installer',
    'napari._qt.dialogs.qt_plugin_dialog',
    'napari._qt.dialogs.qt_plugin_report',
    'napari._qt.dialogs.qt_reader_dialog',
    'napari._qt.dialogs.screenshot_dialog',
    'napari._qt.experimental.qt_chunk_receiver',
    'napari._qt.experimental.qt_poll',
    'napari._qt.layer_controls.qt_colormap_combobox',
    'napari._qt.layer_controls.qt_image_controls',
    'napari._qt.layer_controls.qt_image_controls_base',
    'napari._qt.layer_controls.qt_labels_controls',
    'napari._qt.layer_controls.qt_layer_controls_base',
    'napari._qt.layer_controls.qt_layer_controls_container',
    'napari._qt.layer_controls.qt_points_controls',
    'napari._qt.layer_controls.qt_shapes_controls',
    'napari._qt.layer_controls.qt_surface_controls',
    'napari._qt.layer_controls.qt_tracks_controls',
    'napari._qt.layer_controls.qt_vectors_controls',
    'napari._qt.menus._util',
    'napari._qt.menus.debug_menu',
    'napari._qt.menus.file_menu',
    'napari._qt.perf.qt_event_tracing',
    'napari._qt.perf.qt_performance',
    'napari._qt.qt_event_filters',
    'napari._qt.qt_event_loop',
    'napari._qt.qt_main_window',
    'napari._qt.qt_resources._svg',
    'napari._qt.qt_viewer',
    'napari._qt.qthreading',
    'napari._qt.utils',
    'napari._qt.widgets._slider_compat',
    'napari._qt.widgets.qt_color_swatch',
    'napari._qt.widgets.qt_dict_table',
    'napari._qt.widgets.qt_dims',
    'napari._qt.widgets.qt_dims_slider',
    'napari._qt.widgets.qt_dims_sorter',
    'napari._qt.widgets.qt_extension2reader',
    'napari._qt.widgets.qt_font_size',
    'napari._qt.widgets.qt_highlight_preview',
    'napari._qt.widgets.qt_keyboard_settings',
    'napari._qt.widgets.qt_message_popup',
    'napari._qt.widgets.qt_mode_buttons',
    'napari._qt.widgets.qt_plugin_sorter',
    'napari._qt.widgets.qt_progress_bar',
    'napari._qt.widgets.qt_range_slider_popup',
    'napari._qt.widgets.qt_scrollbar',
    'napari._qt.widgets.qt_size_preview',
    'napari._qt.widgets.qt_spinbox',
    'napari._qt.widgets.qt_splash_screen',
    'napari._qt.widgets.qt_theme_sample',
    'napari._qt.widgets.qt_tooltip',
    'napari._qt.widgets.qt_viewer_buttons',
    'napari._qt.widgets.qt_viewer_dock_widget',
    'napari._qt.widgets.qt_viewer_status_bar',
    'napari._qt.widgets.qt_welcome',
    'napari._vispy.canvas',
    'napari._vispy.experimental.texture_atlas',
    'napari._vispy.experimental.tile_set',
    'napari._vispy.experimental.tiled_image_visual',
    'napari._vispy.experimental.vispy_tiled_image_layer',
    'napari._vispy.overlays.base',
    'napari._vispy.utils.cursor',
    'napari.components.layerlist',
    'napari.layers._layer_actions',
    'napari.layers._multiscale_data',
    'napari.layers.intensity_mixin',
    'napari.layers.points._points_key_bindings',
    'napari.layers.points._points_utils',
    'napari.layers.points._slice',
    'napari.layers.points.points',
    'napari.layers.shapes._shapes_mouse_bindings',
    'napari.layers.shapes.shapes',
    'napari.layers.utils._link_layers',
    'napari.layers.utils.color_encoding',
    'napari.layers.utils.color_manager',
    'napari.layers.utils.stack_utils',
    'napari.layers.utils.string_encoding',
    'napari.layers.utils.style_encoding',
    'napari.layers.utils.text_manager',
    'napari.utils._magicgui',
    'napari.utils._testsupport',
    'napari.utils._tracebacks',
    'napari.utils.action_manager',
    'napari.utils.events.containers._evented_dict',
    'napari.utils.events.containers._evented_list',
    'napari.utils.events.containers._nested_list',
    'napari.utils.events.custom_types',
    'napari.utils.events.debugging',
    'napari.utils.events.event',
    'napari.utils.events.evented_model',
    'napari.utils.interactions',
    'napari.utils.key_bindings',
    'napari.utils.mouse_bindings',
    'napari.utils.progress',
    'napari.utils.shortcuts',
    'napari.utils.stubgen',
    'napari.utils.transforms.transforms',
    'napari.utils.tree.group',
    'napari.view_layers',
    'napari._app_model.injection._processors',
]
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "napari.settings",
    "napari.settings._yaml",
    "napari.plugins.exceptions",
    "napari._app_model.actions._toggle_action",
    "napari._vispy.filters.tracks",
    "napari._vispy.utils.text",
    "napari._vispy.utils.visual",
    "napari._vispy.visuals.clipping_planes_mixin",
    "napari._vispy.visuals.markers",
    "napari._vispy.visuals.surface",
    "napari.layers._data_protocols",
    "napari.layers._source",
    "napari.layers.shapes._shapes_models.path",
    "napari.layers.shapes._shapes_models.polygon",
    "napari.layers.utils.interactivity_utils",
    "napari.layers.vectors._vector_utils",
    "napari.resources._icons",
    "napari.utils.color",
    "napari.utils.events.containers._dict",
    "napari.utils.events.event_utils",
    "napari.utils.migrations",
    "napari.utils.perf._patcher",
    "napari.utils.validators",
    "napari.window"
]
disallow_incomplete_defs = false
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = [
    "napari.settings._utils",
    "napari.settings._appearance",
    "napari.settings._shortcuts",
    "napari.settings._application",
    "napari._app_model.actions._view_actions",
    "napari._event_loop",
    "napari._vispy.utils.quaternion",
    "napari._vispy.visuals.bounding_box",
    "napari._vispy.visuals.image",
    "napari._vispy.visuals.interaction_box",
    "napari._vispy.visuals.points",
    "napari._vispy.visuals.scale_bar",
    "napari.components._layer_slicer",
    "napari.components._viewer_mouse_bindings",
    "napari.components.overlays.base",
    "napari.components.overlays.interaction_box",
    "napari.layers.base._base_constants",
    "napari.utils.colormaps.categorical_colormap_utils",
    "napari.utils.perf._event",
    "napari.utils.perf._trace_file",
]
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = [
    "napari.components.viewer_model",
    "napari.settings._fields",
    "napari.settings._migrations",
    "napari.settings._base",
    "napari.types",
    "napari.plugins._npe2",
    "napari.settings._napari_settings",
    "napari.plugins._plugin_manager",
    "napari.plugins.utils",
    "napari._qt._qapp_model.qactions._file",
    "napari._qt._qapp_model.qactions._help",
    "napari._qt._qapp_model.qactions._view",
    "napari._vispy.camera",
    "napari._vispy.layers.image",
    "napari._vispy.layers.tracks",
    "napari._vispy.layers.vectors",
    "napari._vispy.overlays.axes",
    "napari._vispy.overlays.interaction_box",
    "napari._vispy.overlays.labels_polygon",
    "napari._vispy.overlays.scale_bar",
    "napari._vispy.overlays.text",
    "napari.layers.labels._labels_key_bindings",
    "napari.layers.shapes._mesh",
    "napari.layers.surface._surface_key_bindings",
    "napari.layers.tracks._tracks_key_bindings",
    "napari.layers.utils._slice_input",
    "napari.layers.vectors._vectors_key_bindings",
    "napari.utils._register",
    "napari.utils.colormaps.categorical_colormap",
    "napari.utils.colormaps.standardize_color",
    "napari.utils.events.containers._set",
    "napari.utils.geometry",
    "napari.utils.io",
    "napari.utils.notebook_display",
    "napari.utils.perf._config",
    "napari.utils.transforms.transform_utils",
    "napari.utils.translations",
    "napari.utils.tree.node",
    "napari.viewer",
    "napari.layers.shapes._shapes_key_bindings",
    "napari.layers.shapes._shape_list"
]
disallow_incomplete_defs = false
disallow_untyped_calls = false
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = [
    "napari.plugins",
    "napari._vispy.layers.base",
    "napari._vispy.visuals.axes",
    "napari.layers.labels._labels_mouse_bindings",
    "napari.layers.utils.color_manager_utils",
    "napari.layers.vectors._slice",
    "napari.utils.colormaps.vendored._cm",
    "napari.utils.colormaps.vendored.cm",
    "napari.utils.status_messages",
    "napari.layers.shapes._shapes_utils"
]
disallow_untyped_calls = false
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = [
    "napari._app_model._app",
    "napari.utils.events.containers._selection",
    "napari.utils.theme",
]
disallow_incomplete_defs = false
disallow_untyped_calls = false
disallow_untyped_defs = false
warn_unused_ignores = false

[[tool.mypy.overrides]]
module = [
    "napari._app_model.context._context",
    "napari._qt.containers._factory"
]
disallow_incomplete_defs = false
disallow_untyped_defs = false
warn_unused_ignores = false

[[tool.mypy.overrides]]
module = [
    "napari._qt.menus.plugins_menu",
    "napari._vispy.layers.labels",
    "napari._vispy.layers.points",
    "napari._vispy.layers.shapes",
    "napari._vispy.layers.surface",
    "napari.components._viewer_key_bindings",
    "napari.layers.image.image",
    "napari.layers.labels.labels",
    "napari.layers.surface.surface",
    "napari.layers.tracks.tracks",
    "napari.layers.utils.layer_utils",
    "napari.layers.vectors.vectors",
    "napari.utils._dtype",
    "napari.utils.colormaps.colormap_utils",
    "napari.utils.misc",
    "napari.utils.perf._timers"
]
check_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_calls = false
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = [
    "napari.components.camera",
    "napari.components.dims",
    "napari.conftest",
    "napari.layers.labels._labels_utils",
    "napari.layers.points._points_mouse_bindings",
    "napari.layers.shapes._shapes_models._polgyon_base",
    "napari.layers.shapes._shapes_models.ellipse",
    "napari.layers.shapes._shapes_models.line",
    "napari.layers.shapes._shapes_models.rectangle",
    "napari.layers.shapes._shapes_models.shape",
    "napari.layers.tracks._track_utils",
    "napari.utils.colormaps.colormap",
    "napari.utils.events.containers._selectable_list",
    "napari.utils.notifications",
]
check_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = [
    "napari.utils.events.containers._typed",
    "napari.layers.base.base",
]
check_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_calls = false
disallow_untyped_defs = false
warn_unused_ignores = false

[[tool.mypy.overrides]]
module = [
    "napari.__main__",
    "napari.utils.colormaps.vendored.colors"
]
check_untyped_defs = false
disallow_untyped_calls = false
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = [
    "napari._app_model.context._layerlist_context",
    "napari.components.overlays.labels_polygon",
    "napari.plugins.io",
    "napari.utils.colormaps.vendored._cm_listed"
]
disallow_untyped_calls = false

[[tool.mypy.overrides]]
module = [
    "napari._qt.containers.qt_layer_list"
]
check_untyped_defs = false
disallow_untyped_calls = false
disallow_untyped_defs = false
warn_unused_ignores = false

[[tool.mypy.overrides]]
module = [
    "napari._vispy.overlays.bounding_box",
    "napari._vispy.overlays.brush_circle",
    "napari.layers.base._base_mouse_bindings",
    "napari.utils._test_utils",
]
check_untyped_defs = false
disallow_untyped_defs = false
