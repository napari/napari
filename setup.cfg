[metadata]
name = napari
url = https://napari.org
download_url = https://github.com/napari/napari
license = BSD 3-Clause
license_file = LICENSE
description = n-dimensional array viewer in Python
long_description = file: README.md
long_description_content_type = text/markdown
author = napari team
author_email = napari-steering-council@googlegroups.com
classifiers =
    Development Status :: 3 - Alpha
    Environment :: X11 Applications :: Qt
    Intended Audience :: Education
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Programming Language :: C
    Programming Language :: Python
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Topic :: Scientific/Engineering
    Topic :: Scientific/Engineering :: Visualization
    Topic :: Scientific/Engineering :: Information Analysis
    Topic :: Scientific/Engineering :: Bio-Informatics
    Topic :: Utilities
    Operating System :: Microsoft :: Windows
    Operating System :: POSIX
    Operating System :: Unix
    Operating System :: MacOS


[options]
zip_safe = False
packages = find:
python_requires = >=3.8
include_package_data = True
install_requires =
    appdirs>=1.4.4
    cachey>=0.2.1
    certifi>=2018.1.18
    dask[array]>=2.15.0,!=2.28.0  # https://github.com/napari/napari/issues/1656
    imageio>=2.5.0,!=2.11.0
    jsonschema>=3.2.0
    magicgui>=0.3.6
    napari-console>=0.0.4
    napari-plugin-engine>=0.1.9
    napari-svg>=0.1.4
    npe2>=0.2.1
    numpy>=1.18.5
    numpydoc>=0.9.2
    pandas>=1.1.0 ; python_version < '3.9'
    pandas>=1.3.0 ; python_version >= '3.9'
    Pillow!=7.1.0,!=7.1.1  # not a direct dependency, but 7.1.0 and 7.1.1 broke imageio
    pint>=0.17
    psutil>=5.0
    PyOpenGL>=3.1.0
    PyYAML>=5.1
    pydantic>=1.9.0
    qtpy>=1.7.0
    scipy>=1.4.0 ; python_version < '3.9'
    scipy>=1.5.4 ; python_version >= '3.9'
    superqt>=0.2.5
    tifffile>=2020.2.16
    typing_extensions
    toolz>=0.10.0
    tqdm>=4.56.0
    vispy>=0.9.6
    wrapt>=1.11.1

[options.package_data]
* = *.pyi
napari =
    builtins.yaml

# for explanation of %(extra)s syntax see:
# https://github.com/pypa/setuptools/issues/1260#issuecomment-438187625
# this syntax may change in the future

[options.extras_require]
pyside2 =
    PySide2>=5.13.2,!=5.15.0 ; python_version != '3.8'
    PySide2>=5.14.2,!=5.15.0 ; python_version == '3.8'
pyside =  # alias for pyside2
    %(pyside2)s
pyqt5 =
    PyQt5>=5.12.3,!=5.15.0
pyqt =  # alias for pyqt5
    %(pyqt5)s
qt =  # alias for pyqt5
    %(pyqt5)s
# all is the full "batteries included" extra.
all =
    scikit-image[data]
    %(pyqt5)s
testing =
    babel>=2.9.0
    pytest
    pytest-faulthandler
    pytest-order
    pytest-qt
    hypothesis>=6.8.0
    xarray
    fsspec
    zarr
    matplotlib
    scikit-image>=0.18.1,!=0.19.0
    pooch>=1.3.0
    semgrep
    tensorstore>=0.1.13 ; python_version < '3.10'
    torch>=1.7 ; python_version < '3.10'
    meshzoo
release =
    PyGithub>=1.44.1
    twine>=3.1.1
    pygithub
dev =
    pre-commit>=2.9.0
    black==20.8b1
    flake8==3.8.4
    pydantic[dotenv]
    check-manifest>=0.42
    rich
    %(all)s
    %(testing)s
docs =
    %(all)s
    sphinx_autodoc_typehints==1.12.0
    Jinja2
    jupytext
    sphinx-tabs
    sphinx-panels
    myst-nb
    napari-sphinx-theme
    sphinx-external-toc
build =
    black
    isort
    pyqt5
bundle_build =
    briefcase==0.3.1
    tomlkit
    ruamel.yaml
    wheel
    dmgbuild>=1.4.2
    PySide2==5.15.2
    markupsafe<2.1
bundle_run =
    imagecodecs
    pip
    PySide2==5.15.2
    scikit-image[data]
    zarr
    wheel
    pims
    numpy==1.19.3

[options.entry_points]
console_scripts =
    napari = napari.__main__:main
pytest11 =
    napari = napari.utils._testsupport
napari.manifest =
    napari = napari:builtins.yaml
    
[flake8]
# Ignores - https://lintlyci.github.io/Flake8Rules
# E203  Whitespace before ':'  (sometimes conflicts with black)
# E501 line too long (84 > 79 characters)  (sometimes too annoying)
# W503	Line break occurred before a binary operator
# C901 McCabe complexity test. Would be nice to re-enable, but takes work
ignore = E203,W503,E501,C901,D401
max-line-length = 79
max-complexity = 18
exclude = _vendor,vendored,__init__.py,examples,benchmarks,napari/resources/_qt_resources*.py


[coverage:report]
exclude_lines =
    pragma: no cover
    if TYPE_CHECKING:
    raise NotImplementedError()


[importlinter]
root_package = napari
include_external_packages=True


[importlinter:contract:1]
name = "Forbid import PyQt and PySide"
type = forbidden
source_modules =
    napari
forbidden_modules =
    PyQt5
    PySide2
ignore_imports =
    napari._qt.qt_resources._icons -> PyQt5
    napari._qt.qt_resources._icons -> PySide2
    napari._qt -> PySide2


[importlinter:contract:2]
name = "Block import from qt module in abstract ones"
type = layers
layers=
    napari.qt
    napari.layers

[importlinter:contract:3]
name = "Block import from qt module in abstract ones"
type = layers
layers=
    napari.qt
    napari.components
